<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.sevenfs.mapper.mail.MailMapper">

<select id="getAtchFile" parameterType="long" resultType="kr.or.ddit.sevenfs.vo.AttachFileVO">
SELECT
    atch_file_no,
    file_sn,
    file_stre_path,
    file_nm,
    file_stre_nm,
    file_extsn,
    file_mime,
    file_size,
    file_view_size,
    dwld_co,
    empl_no,
    file_use_yn,
    file_creat_dt
FROM
    attatch_file
WHERE 
    atch_file_no = #{atchFileNo}
</select>

<select id="getList" resultType="kr.or.ddit.sevenfs.vo.mail.MailVO" parameterType="kr.or.ddit.sevenfs.utils.ArticlePage">
SELECT E.EMPL_NM
    ,M.email_no
    ,M.empl_no
    ,M.lbl_no
    ,M.email_trnsmis_ty
    ,M.email_cl_ty
    ,M.trnsmit_email
    ,M.recptn_email
    ,M.email_sj
    ,M.email_cn
    ,M.atch_file_no
    ,M.trnsmit_dt
    ,M.readng_at
    ,M.email_group_no
FROM MAIL M
INNER JOIN EMPLOYEE E ON M.EMPL_NO = E.EMPL_NO
WHERE M.EMPL_NO=#{searchVo.emplNo}
  AND M.email_cl_ty = #{searchVo.emailClTy}
	<if test = "searchVo.keyword != null and searchVo.keyword !=''">
		<choose>
			<when test="searchVo.searchOption = 'title'">
				AND m.EMAIL_SJ '%' || #{searchVo.keyword} || '%'
			</when>
			<when test="searchVo.searchOption = 'content'">
				AND m.EMAIL_CN '%' || #{searchVo.keyword} || '%'
			</when>
			<otherwise>
				AND (m.EMAIL_SJ '%' || #{mailVO.keyword} || '%'
					 OR m.EMAIL_CN '%' || #{searchVo.keyword} || '%')
			</otherwise>
		</choose>
	</if>
	ORDER BY TRNSMIT_DT
	OFFSET (#{currentPage} - 1) * 10 ROWS
	FETCH NEXT 10 ROWS ONLY	
</select>

<select id="emailDetail" parameterType="kr.or.ddit.sevenfs.vo.mail.MailVO" resultType="kr.or.ddit.sevenfs.vo.mail.MailVO">
SELECT
	(select empl_nm from EMPLOYEE where empl_no=m.empl_no) empl_nm,
    m.email_no,
    m.empl_no,
    m.lbl_no,
    m.email_trnsmis_ty,
    m.email_cl_ty,
    m.trnsmit_email,
    m.recptn_email,
    m.email_sj,
    m.email_cn,
    m.atch_file_no,
    m.trnsmit_dt,
    m.readng_at,
    m.email_group_no,
    m.starred
FROM mail m
WHERE m.email_group_no = (
    SELECT email_group_no
    FROM mail
    WHERE email_no = #{emailNo}
)
</select>

<select id="getTotal" parameterType="hashmap" resultType="int">
SELECT count(*)
FROM mail m
WHERE m.EMPL_NO = #{emplNo}
AND m.EMAIL_CL_TY = #{mailVO.emailClTy}
	<if test = "mailVO.keyword != null and mailVO.keyword !=''">
		<choose>
			<when test="mailVO.searchOption = 'title'">
				AND m.EMAIL_SJ '%' || #{mailVO.keyword} || '%'
			</when>
			<when test="mailVO.searchOption = 'content'">
				AND m.EMAIL_CN '%' || #{mailVO.keyword} || '%'
			</when>
			<otherwise>
				AND (m.EMAIL_SJ '%' || #{mailVO.keyword} || '%'
					 OR m.EMAIL_CN '%' || #{mailVO.keyword} || '%')
			</otherwise>
		</choose>
	</if>
</select>
<select id="getMailNos" parameterType="int" resultType="int">
select SEQ_MAIL.nextval from dual
CONNECT BY LEVEL &lt;= #{count}
</select>

<select id="getEmailGroupNo" resultType="int">
	select nvl(max(email_group_no),0)+1 from mail
</select>

<insert id="sendMail" parameterType="list">
        INSERT ALL
            <foreach collection="mailVOList" item="mail" >
                INTO mail(email_no,
					    empl_no,
					    <if test="mail.lblNo!=0">
						    lbl_no,
					    </if>
					    email_trnsmis_ty,
					    email_cl_ty,
					    trnsmit_email,
					    recptn_email,
					    email_sj,
					    email_cn,
					    atch_file_no,
					    email_group_no)
                VALUES (
                    #{mail.emailNo},
                    #{mail.emplNo},
                    <if test="mail.lblNo!=0">
	                    #{mail.lblNo},
					</if>
                    #{mail.emailTrnsmisTy},
                    #{mail.emailClTy},
                    #{mail.trnsmitEmail},
                    #{mail.recptnEmail},
                    #{mail.emailSj},
                    #{mail.emailCn},
                    #{mail.atchFileNo},
                    #{mail.emailGroupNo}
                )
            </foreach>
    	SELECT * FROM dual
    </insert>
</mapper>