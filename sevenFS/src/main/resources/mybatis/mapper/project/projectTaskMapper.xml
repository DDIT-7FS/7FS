<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.sevenfs.mapper.project.ProjectTaskMapper">

   <!-- 업무 등록 -->
    <insert id="insertProjectTask" parameterType="projectTaskVO">
        <selectKey resultType="int" keyProperty="taskNo" order="BEFORE">
            SELECT SEQ_PROJECT_TASK.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO PROJECT_TASK (
            TASK_NO, PRJCT_NO, UPPER_TASK_NO, CHARGER_EMPNO, TASK_NM,
            TASK_CN, PRIORT, TASK_GRAD, PROGRSRT, TASK_STTUS,
            ATCH_FILE_NO, TASK_BEGIN_DT, TASK_DAYCNT, TASK_END_DT
        ) VALUES (
            #{taskNo}, #{prjctNo}, #{upperTaskNo, jdbcType=NUMERIC}, 
            #{chargerEmpno}, #{taskNm}, #{taskCn, jdbcType=VARCHAR},
            #{priort}, #{taskGrad}, #{progrsrt}, #{taskSttus},
            #{atchFileNo, jdbcType=NUMERIC}, #{taskBeginDt}, 
            #{taskDaycnt}, #{taskEndDt}
        )
    </insert>
    
    <!-- 업무 일괄 등록 -->
    <insert id="insertProjectTaskBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";" open="BEGIN" close="END;">
            INSERT INTO PROJECT_TASK (
                TASK_NO, PRJCT_NO, UPPER_TASK_NO, CHARGER_EMPNO, TASK_NM,
                TASK_CN, PRIORT, TASK_GRAD, PROGRSRT, TASK_STTUS,
                ATCH_FILE_NO, TASK_BEGIN_DT, TASK_DAYCNT, TASK_END_DT
            ) VALUES (
                SEQ_PROJECT_TASK.NEXTVAL, 
                #{item.prjctNo}, 
                #{item.upperTaskNo, jdbcType=NUMERIC}, 
                #{item.chargerEmpno}, 
                #{item.taskNm}, 
                #{item.taskCn, jdbcType=VARCHAR},
                #{item.priort}, 
                #{item.taskGrad}, 
                #{item.progrsrt}, 
                #{item.taskSttus},
                #{item.atchFileNo, jdbcType=NUMERIC}, 
                #{item.taskBeginDt}, 
                #{item.taskDaycnt}, 
                #{item.taskEndDt}
            )
        </foreach>
    </insert>
    
    <!-- 프로젝트의 상위 업무 목록 조회 -->
    <select id="getParentTasks" parameterType="int" resultType="projectTaskVO">
        SELECT 
            PT.TASK_NO, PT.PRJCT_NO, PT.UPPER_TASK_NO, PT.CHARGER_EMPNO, 
            PT.TASK_NM, PT.TASK_CN, PT.PRIORT, PT.TASK_GRAD, PT.PROGRSRT, 
            PT.TASK_STTUS, PT.ATCH_FILE_NO, PT.TASK_BEGIN_DT, PT.TASK_DAYCNT, 
            PT.TASK_END_DT,
            E.EMPL_NM AS CHARGER_EMP_NM
        FROM 
            PROJECT_TASK PT
        LEFT JOIN 
            EMPLOYEE E ON PT.CHARGER_EMPNO = E.EMPL_NO
        WHERE 
            PT.PRJCT_NO = #{prjctNo}
            AND (PT.UPPER_TASK_NO IS NULL OR PT.UPPER_TASK_NO = 0)
        ORDER BY 
            PT.TASK_NO
    </select>
    
    <!-- 특정 업무의 하위 업무 목록 조회 -->
    <select id="getChildTasks" parameterType="int" resultType="projectTaskVO">
        SELECT 
            PT.TASK_NO, PT.PRJCT_NO, PT.UPPER_TASK_NO, PT.CHARGER_EMPNO, 
            PT.TASK_NM, PT.TASK_CN, PT.PRIORT, PT.TASK_GRAD, PT.PROGRSRT, 
            PT.TASK_STTUS, PT.ATCH_FILE_NO, PT.TASK_BEGIN_DT, PT.TASK_DAYCNT, 
            PT.TASK_END_DT,
            E.EMPL_NM AS CHARGER_EMP_NM
        FROM 
            PROJECT_TASK PT
        LEFT JOIN 
            EMPLOYEE E ON PT.CHARGER_EMPNO = E.EMPL_NO
        WHERE 
            PT.UPPER_TASK_NO = #{taskNo}
        ORDER BY 
            PT.TASK_NO
    </select>
</mapper>